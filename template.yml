AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Uploads Notification Function

Parameters:
  S3BucketName:
    Type: String
    Description: Name of the existing S3 bucket for image uploads
  SNSTopicName:
    Type: String
    Description: Name of the existing SNS topic
  SQSQueueName:
    Type: String
    Description: Name of the existing SQS queue

Resources:
  UploadsNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda.handler.lambda_handler
      CodeUri: ./lambda/
      Runtime: python3.9
      MemorySize: 128
      Timeout: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSCodeDeployFullAccess
        - AWSLambdaRole
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/LambdaCustomPolicy"
        - SQSPollerPolicy:
            QueueName: !Ref SQSQueueName
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopicName
      AutoPublishAlias: live
      DeploymentPreference:
        Type: AllAtOnce
        Role: !GetAtt CodeDeployRole.Arn

      CodeDeployRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - codedeploy.amazonaws.com
                    - lambda.amazonaws.com
                Action:
                  - sts:AssumeRole
          Policies:
            - PolicyName: CodeDeployPolicy
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action:
                      - codedeploy:*
                      - tag:*
                    Resource: "*"

Outputs:
  UploadsNotificationFunctionArn:
    Value: !GetAtt UploadsNotificationFunction.Arn
    Description: "ARN of the Lambda function"
